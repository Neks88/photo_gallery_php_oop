<?php 
 session_start();

//Database Connection Constants
require_once ("separator.php");

define('DB_HOST','localhost');
define('DB_USER','root');
define('DB_PASS','');
define('DB_NAME','gallery_db');

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// DATABASE///////////////////////


class Database {
  
  public $connection;
  
  function __construct() {
   $this-> open_db_connection ();
  }
  
  
  public function open_db_connection () {
    $this->connection = new mysqli(DB_HOST,DB_USER,DB_PASS,DB_NAME);
    
    if($this->connection->connect_errno) {
      die ("Database connection failed badly". mysqli_error());
    }
    
  }
  
  
  
  public function query ($sql) {
    $result = mysqli_query ($this->connection, $sql);
      
    return $result;
  }
  
  
  private function confirm_query($result) {
    if (!$result) {
        
        die ("Query Failed");
      }
  }
  
  
  public function escape_string($string) {
    $escaped_string = mysqli_real_escape_string ($this->connection,$string);
    return $escaped_string;
  }
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////NOVO NOVO NOVO////////////////////////////////////////////////////////////////////////////
  public function the_insert_id () {
    return mysqli_insert_id ($this->connection);
    
  }
  
  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  
}

$database = new Database();







class Db_object {
  
  
   protected static $db_table = "users";
  
  
  public static function find_all () {
  return static::find_by_query("SELECT * FROM ".static::$db_table." ". " ORDER BY id desc");
  }
  
  
  
  
public static function find_by_id ($id) {
    global $database;
    
    $the_result_array = static::find_by_query("SELECT * FROM ".static::$db_table." WHERE id='$id' LIMIT 1");
    
    return !empty($the_result_array)? array_shift($the_result_array) : false;

  }
  
  
  
  
  
  
 public static function find_by_query ($sql) {
    global $database;
    
    $result_set = $database->query($sql);
    $the_object_array=array();
    
    while($row=mysqli_fetch_array($result_set)) {
      $the_object_array[]= static::instantiation ($row);
      
    }
    return $the_object_array;
  }
  
  
  
  
  
  
  
 public static function instantiation ($the_record) {
   
   $calling_class=get_called_class();
    
      $the_object = new $calling_class;
    
//          $the_object->id = $found_user['id'];
//          $the_object->username = $found_user['username'];
//          $the_object->password = $found_user['password'];
//          $the_object->first_name = $found_user['first_name'];
//          $the_object->last_name = $found_user['last_name'];
    
    foreach ($the_record as $the_attribute=>$value){
      if($the_object->has_the_attribute($the_attribute)) {
        $the_object->$the_attribute = $value;
        
      }
    }
      return $the_object;
    
    
  }
  
  
  private function has_the_attribute($the_attribute) {
    $object_properties = get_object_vars($this);
    
    
   return array_key_exists($the_attribute,$object_properties);
  }
  
  
  
  
  
  
  
  
  
    public function properties () {
//    return get_object_vars($this);
    
    $properties = array();
    foreach(static::$db_table_fields as $db_field) {
      if(property_exists($this,$db_field)) {
        
        $properties[$db_field]= $this->$db_field;
      }
      //ovo $this->db_field sve oznacava vrednost .
    }
    return $properties;
  }
  
  
  
  
  
  
  
  
  public function clean_properties () {
      global $database;
    
    $clean_properties = array();
    
    foreach($this->properties() as $key=>$value) {
      $clean_properties[$key] = $database->escape_string($value);
    }
    return $clean_properties;
  }
  
  
  
  
  
  
  
  
  public function save (){
    
    return isset($this->id) ? $this->update() : $this->create();
    
  }
  
  
  
  
  
  
  
  
  public function create () {
    global $database;
    
    $properties = $this->clean_properties();
    
    
    $sql = "INSERT INTO " .static::$db_table. "(".implode(",",array_keys($properties)) .")";
    $sql .= " VALUES ('". implode("','",array_values($properties)) ."')";

    
      if($database->query($sql)){
        $this->id = $database->the_insert_id();
        return true;
      }else{
        return false;
      }
  }
  
  
  
  public function update() {
    global $database;
    
      $properties = $this->clean_properties();
      $properties_pairs = array();
      
    foreach($properties as $key=>$value ) {
      $properties_pairs[]="{$key}='{$value}'";
    }
    
    
    $sql="UPDATE " .static::$db_table. " SET ";
    $sql.=implode(", ", $properties_pairs);
    $sql.=" WHERE id= ".$database->escape_string($this->id);
    
    $database->query($sql);
    
    return (mysqli_affected_rows($database->connection)==1) ? true : false;
  }
  
  
  
  
  
  public function delete(){
    global $database;
    $sql = "DELETE FROM " .static::$db_table. " "; 
    $sql.= "WHERE id=" . $database->escape_string($this->id);
    $sql.=" LIMIT 1";
    
    $database->query($sql);
    return (mysqli_affected_rows($database->connection)==1) ? true : false;
  }
  
  
  
  
  public static function count_all () {
    
    global $database;
    
    $sql = "SELECT COUNT(*) FROM ".static::$db_table;
    $result_set= $database->query($sql);
    
    $row=mysqli_fetch_array($result_set);
    
    return array_shift($row);
    
  }
  
  
} // END OF DB CLASS



class User extends Db_object {
  
  protected static $db_table = "users";
  protected static $db_table_fields=array ('username','password','first_name','last_name','user_image');
  public $id;
  public $username;
  public $password;
  public $first_name;
  public $last_name;
  
  public $upload_directory = "images";
  public $image_placeholder="http://placehold.it/62x62&text=image";
  
  
  public $user_image;
  public $tmp_path;
  public $type;
  public $size;
  
  
  
  public function image_path_and_placeholder() {
    
    return empty($this->user_image) ? $this->image_placeholder : $this->upload_directory.DS.$this->user_image;
  }
  
  
  
  
  
  
  
  public static function verify_user ($username,$password) {
    global $database;
    
    $username = $database->escape_string($username);
    $password = $database->escape_string($password);
    $sql = "SELECT * FROM ".self::$db_table." WHERE ";
    $sql .= "username='{$username}' AND password='{$password}' ";
    $sql .= "LIMIT 1";
    
    $the_result_array = self::find_by_query($sql);
    
    return !empty($the_result_array)? array_shift($the_result_array) : false;
    
  }
  
  

  public function delete_user() {
    
    if($this->delete()) {
      $target_path = SITE_ROOT .DS. 'admin'.DS.$this->image_path_and_placeholder();
      
      return unlink($target_path) ? true : false;
    }else {
      return false;
    }
  }
  
  
  
  
  public function set_file($file){
    
    $this->user_image = $file['name'];
    $this->tmp_path = $file['tmp_name'];
    $this->type = $file['type'];
    $this->size = $file['size'];
  
}
  
  
  
    public function save_user_and_image () {
//  
      $target_path = SITE_ROOT .DS. 'admin' .DS. $this->upload_directory .DS. $this->user_image;

  move_uploaded_file($this->tmp_path,$target_path);
      $this->update();
        
          
  }
  
  
  
  
} //END OF USER CLASS
  
  
  
  
  
  
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////PHOTO CLASSS////
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////PHOTO CLASSS////
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////PHOTO CLASSS////
  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  

  
  
  class Photo extends Db_object    {
  
  
 protected static $db_table = "photos";
  protected static $db_table_fields=array('id','title','description','filename','type','size');
  
  public $id;
  public $title;
  public $description;
  public $filename;
  public $type;
  public $size;
    
  public $tmp_path;
  
  public $upload_directory = "images";
  public $errors = array();
    
    
    
    
  
  
public function set_file($file){
    
    $this->filename = $file['name'];
    $this->tmp_path = $file['tmp_name'];
    $this->type = $file['type'];
    $this->size = $file['size'];
  
}
    
    
  public function picture_path() {
    return $this->upload_directory.DS.$this->filename;
  } 
    
    
    
    
    
  public function save () {
//    if($this->photo_id) {
//      $this->update();
//    }
//    }else {
//      if(!empty($this->errors)) {
//        return false;
//      }
//      if(empty($this->filename) || empty($this->tmp_path)) {
//        $this->errors[] = "the file was not aveilable";
//        return false;
//        
//      }
      $target_path = SITE_ROOT .DS. 'admin' .DS. $this->upload_directory .DS. $this->filename;
////      $target_path=$upload_directory."/".$filename;
//      if(file_exists($target_path)) {
//        $this->errors[]="The file {$this->filename} already exists";
//        return false;
//      }
  move_uploaded_file($this->tmp_path,$target_path); 
        $this->create();
          
  }
        
        
  public function delete_photo() {
    if($this->delete()) {
      $target_path = SITE_ROOT .DS. 'admin'.DS.$this->picture_path();
      
      return unlink($target_path) ? true : false;
    }else {
      return false;
    }
  }
   
    
    
  } //END OF PHOTO CLASS
  
  
  

  
  class Comment extends Db_object {
  
  protected static $db_table = "comments";
  protected static $db_table_fields=array('id','photo_id','author','body');
    
  public $id;
  public $photo_id;
  public $author;
  public $body;
    
    
    

  
  public static function create_comment ($photo_id, $author="John", $body="") {
      
      if(!empty($photo_id) && !empty($author) && !empty($body)) {
        
        $comment = new Comment();
        $comment->photo_id=$photo_id;
        $comment->author= $author;
        $comment->body = $body;
        
        return $comment;
        
      }else {
        return false;
      }
    }

  

  
    
  public function find_the_comments($photo_id) {
    global $database;
    
    $sql = "SELECT * FROM ".self::$db_table." WHERE photo_id=" .$database->escape_string ($photo_id)." ORDER BY photo_id ASC";
    
    return self::find_by_query($sql);
  }
  
  
  
} //END OF COMMENT CLASS
  
  




  







































//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////FUNCTIONS//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




function __autoload($class) {
  $class= strtolower($class);
  $the_path = "includes/{$class}.php";
  
  
  
  if(file_exists($the_path)){
    require_once($the_path);
  }else {
    die("This file name {$class}.php was not found...");
  }
}

function redirect ($location) {
  header("Location: {$location}");
}








class Session {
  
    private $signed_id=false;
    public $user_id;
    public $counts;

  function __construct () {
   
//    $this->visitor_count();
    $this->check_the_login();
  
}
  
  
  
  
  
//  public function visitor_count() {
//    
//    if(isset($_SESSION['count'])) {
//      return $this->counts=$_SESSION['count']++;
//    }else {
//      return $_SESSION['count'] = 1;
//    }
//  }
  
  
  
  
  

  
  public function is_signed_in () {
    return $this->signed_in;
  }
  
  
  
  
  
  public function login ($user) {
    if($user) {
      $this->user_id = $_SESSION['user_id'] = $user->id;
      $this->signed_in = true;
    }
  }
  
  
  
  
  
  public function logout () {
    unset($_SESSION['user_id']);
    unset($this->user_id);
    $this->signed_in = false;
  }
  
  
  
  
  
  
  private function check_the_login () {
    if(isset($_SESSION['user_id'])) {
      $this->user_id=$_SESSION['user_id'];
      $this->signed_id =true;
    }else {
      unset($this->user_id);
      $this->signed_in=false;
    }
  }
  
  
  
  
  
  
}
  
  $session = new Session();
  


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////LOGIN.php////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





?>